group 'com.sdl.dxa'
version '1.6.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'signing'

def isRelease = !version.endsWith("-SNAPSHOT")

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier "javadoc"
    from javadoc
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifacts {
                artifact sourceJar
                artifact javadocJar
            }

            pom.withXml {
                def root = asNode()
                root.appendNode('name', 'DXA Builder')
                root.appendNode('description', 'Builder plugin for DXA projects used internally to organize build process')
                root.appendNode('packaging', 'jar')

                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'The Apache License, Version 2.0')
                license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')

                def developers = root.appendNode('developers')
                def addDeveloper = { developer, id, name, email ->
                    developer.appendNode('id', id)
                    developer.appendNode('name', name)
                    developer.appendNode('email', email)
                    developer.appendNode('timezone', '+1')
                    developer.appendNode('organization', 'SDL Group')
                    developer.appendNode('organizationUrl', 'http://www.sdl.com')
                }
                addDeveloper(developers.appendNode('developer'), 'rpannekoek', 'Rick Pannekoek', 'rpannekoek@sdl.com')
                addDeveloper(developers.appendNode('developer'), 'azarakovskiy', 'Alexey Zarakovskiy', 'azarakovskiy@sdl.com')

                def scm = root.appendNode('scm')
                scm.appendNode('url', 'https://github.com/sdl/dxa-web-application-java')
                scm.appendNode('connection', 'scm:git:git@github.com:sdl/dxa-web-application-java.git')
                scm.appendNode('developerConnection', 'scm:git:git@github.com:sdl/dxa-web-application-java.git')
            }
        }
    }
    repositories {
        maven {
            if (!isRelease) {
                name "sonatype-nexus-snapshots"
                url "https://oss.sonatype.org/content/repositories/snapshots"
            } else {
                if (project.hasProperty('release')) {
                    name "sonatype-nexus-staging"
                    url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                }
            }

            if (project.hasProperty("publishUsername") && project.hasProperty("publishPassword")) {
                credentials {
                    username project.publishUsername
                    password project.publishPassword
                }
            }
        }
    }
}

if (isRelease) {
    signing {
        sign configurations.archives
    }
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task publishLocal() {
    dependsOn build
    dependsOn publishToMavenLocal
}

task publishRemote() {
    dependsOn publishLocal
    dependsOn publish
}

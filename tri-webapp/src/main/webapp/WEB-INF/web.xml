<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <!-- Spring ContextLoaderListener -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:/META-INF/spring-context.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- Spring RequestContextFilter, necessary to support request-scoped beans (such as WebRequestContext) -->
    <!-- Normally DispatcherServlet already provides the functionality that this filter provides, but
         we need to access request-scoped beans in filters that are executed before DispatcherServlet is called. -->
    <filter>
        <filter-name>requestContextFilter</filter-name>
        <filter-class>org.springframework.web.filter.RequestContextFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>requestContextFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <!-- Filter for Ambient Data Framework -->
    <filter>
        <filter-name>ambientDataServletFilter</filter-name>
        <filter-class>com.tridion.ambientdata.web.AmbientDataServletFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>ambientDataServletFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <!-- Filter that detects localization and stores it in the WebRequestContext -->
    <filter>
        <filter-name>localizationFilter</filter-name>
        <filter-class>com.sdl.tridion.referenceimpl.webapp.filter.LocalizationFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>localizationFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <!-- Filter for images and other static resources (everything under /system and /media) -->
    <!-- TODO: Must be mapped to /* and filter itself must match against URL pattern in configuration -->
    <filter>
        <filter-name>binaryFilter</filter-name>
        <filter-class>com.sdl.tridion.referenceimpl.webapp.filter.BinaryFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>binaryFilter</filter-name>
        <url-pattern>/favicon.ico</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
    </filter-mapping>
    <filter-mapping>
        <filter-name>binaryFilter</filter-name>
        <url-pattern>/system/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
    </filter-mapping>
    <filter-mapping>
        <filter-name>binaryFilter</filter-name>
        <url-pattern>/media/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
    </filter-mapping>

    <!-- CWD image transformer servlet - Remove this is you are not using CID -->
    <servlet>
        <servlet-name>imageTransformer</servlet-name>
        <servlet-class>com.sdl.context.image.servlet.ImageTransformerServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>imageTransformer</servlet-name>
        <url-pattern>/cid/*</url-pattern>
    </servlet-mapping>

    <!-- Spring dispatcher servlet -->
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>
